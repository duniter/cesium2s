@mixin font-size($size) {
  font-size: calculateRem($size);
}

@mixin font-size-important($size) {
  font-size: calculateRem($size) !important;
}

@mixin font-roboto($size: false, $colour: false, $weight: false, $lh: false) {
  font-family: 'Roboto', Helvetica, Arial, sans-serif;

  @if $size {
    font-size: $size;
  }

  @if $colour {
    color: $colour;
  }

  @if $weight {
    font-weight: $weight;
  }

  @if $lh {
    line-height: $lh;
  }
}

@mixin color($color-name) {
  $value: map-get($colors, $color-name);
  $base: map-get($value, base);

  color: var(--ion-color-#{'' + $color-name}, $base);
}

/**
* Define CSS theme colors
*/
@mixin generate-color($color-name) {
  $value: map-get($colors, $color-name);
  $base: map-get($value, base);
  $contrast: map-get($value, contrast);
  $shade: map-get($value, shade);
  $tint: map-get($value, tint);
  --ion-color-base: var(--ion-color-#{'' + $color-name}, #{$base}) !important;
  --ion-color-base-rgb: var(--ion-color-#{'' + $color-name}-rgb, #{color-to-rgb-list($base)}) !important;
  --ion-color-contrast: var(--ion-color-#{'' + $color-name}-contrast, #{$contrast}) !important;
  --ion-color-contrast-rgb: var(--ion-color-#{'' + $color-name}-contrast-rgb, #{color-to-rgb-list($contrast)}) !important;
  --ion-color-shade: var(--ion-color-#{'' + $color-name}-shade, #{$shade}) !important;
  --ion-color-tint: var(--ion-color-#{'' + $color-name}-tint, #{$tint}) !important;
}

@mixin generate-color-list($color-name) {
  $value: map-get($colors, $color-name);
  $base: map-get($value, base);
  $contrast: map-get($value, contrast);
  $shade: map-get($value, shade);
  $tint: map-get($value, tint);
  --ion-color-#{""+$color-name}: #{$base};
  --ion-color-#{""+$color-name}-rgb: #{color-to-rgb-list($base)};
  --ion-color-#{""+$color-name}-contrast: #{$contrast};
  --ion-color-#{""+$color-name}-contrast-rgb: #{color-to-rgb-list($contrast)};
  --ion-color-#{""+$color-name}-shade: #{$shade};
  --ion-color-#{""+$color-name}-tint: #{$tint};
}

@mixin set-color-each-ion-colors($element-name) {
  @each $color-name, $value in $colors {
    #{$element-name}.ion-color-#{'' + $color-name} {
      color: var(--ion-color-base);
    }
  }
}

@mixin css-variables-to-root() {
  --ion-background-color: #{$background-color};
  --ion-toolbar-background: var(--ion-background-color);
  --ion-item-background: #{$ion-item-background-color};

  @each $color-name, $value in $colors {
    .ion-color-#{'' + $color-name} {
      @include generate-color($color-name);
    }
  }

  @each $color-name, $value in $colors {
    @include generate-color-list($color-name);
  }

  --ion-grid-column-padding: #{$ion-grid-column-padding};
  --ion-padding: #{$ion-padding};
  --ion-margin: #{$ion-margin};

  --app-toolbar-height: #{$app-toolbar-height};
  --app-footer-height: #{$app-footer-height};
}
